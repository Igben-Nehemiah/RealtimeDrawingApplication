<Window x:Class="WPFGraphicUserInterface.Views.StartUpWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:WPFGraphicUserInterface.ViewModels"
        mc:Ignorable="d" Topmost="False"
        Title="{Binding StartUpWindowTitle}" Height="450" Width="800">

    <Window.Resources>
        <Style x:Key="IconGlow" TargetType="Path">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Stroke" Value="white"/>
                    <Setter Property="StrokeThickness" Value="2"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="IconMouseOverHandCursor" TargetType="Path">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <DockPanel Background="White"  Grid.ColumnSpan="3">

            <DockPanel DockPanel.Dock="Top" 
                   Background="#6e8bc4">
                <TextBlock Text="{Binding UserProxy.UserFirstName}"
                           FontSize="14"
                           FontStyle="Italic"
                           FontWeight="DemiBold"
                           DockPanel.Dock="Left"/>

                <Button DockPanel.Dock="Right"
                  HorizontalAlignment="Right"
                  Width="30" Height="30"
                  Margin="10,5,20,5"
                        Style="{DynamicResource RoundedButton}">
                    <Path Fill="Black" Data="M18,16.08C17.24,16.08 16.56,16.38 16.04,16.85L8.91,12.7C8.96,12.47 9,12.24 9,12C9,11.76 8.96,11.53 8.91,11.3L15.96,7.19C16.5,7.69 17.21,8 18,8A3,3 0 0,0 21,5A3,3 0 0,0 18,2A3,3 0 0,0 15,5C15,5.24 15.04,5.47 15.09,5.7L8.04,9.81C7.5,9.31 6.79,9 6,9A3,3 0 0,0 3,12A3,3 0 0,0 6,15C6.79,15 7.5,14.69 8.04,14.19L15.16,18.34C15.11,18.55 15.08,18.77 15.08,19C15.08,20.61 16.39,21.91 18,21.91C19.61,21.91 20.92,20.61 20.92,19A2.92,2.92 0 0,0 18,16.08Z"
                  HorizontalAlignment="Center"
                          VerticalAlignment="Center"/>
                </Button>
                


                <!--<Button DockPanel.Dock="Right" Style="{DynamicResource AddUserBtn}" Content="" BorderBrush="Transparent"
                    HorizontalAlignment="Left"
                    Margin="0,0,0,0"
                    VerticalAlignment="Top"
                    Height="24"
                    Width="24"
                    >
                    <Button.Background>
                        <ImageBrush ImageSource="C:\Users\user\Desktop\CSharp\Feb_Projects\WPF_Projects\RealTimeDrawingApplication\Common\Icons\account-plus.png" Stretch="None"/>

                    </Button.Background>
                </Button>-->

                <Button DockPanel.Dock="Right"
                  HorizontalAlignment="Right"
                  Width="30" Height="30"
                  Margin="10,5,20,5"
                        Style="{DynamicResource RoundedButton}">
                    <Path Fill="Black" Data="M15,14C12.33,14 7,15.33 7,18V20H23V18C23,15.33 17.67,14 15,14M6,10V7H4V10H1V12H4V15H6V12H9V10M15,12A4,4 0 0,0 19,8A4,4 0 0,0 15,4A4,4 0 0,0 11,8A4,4 0 0,0 15,12Z"
                  HorizontalAlignment="Center"
                          VerticalAlignment="Center"/>
                </Button>



            </DockPanel>

            <DockPanel DockPanel.Dock="Bottom" 
                       Height="30"
                   Background="#6e8bc4">
                <Label Content="{Binding StatusBarMessage}"
                       FontSize="11"
                       FontWeight="DemiBold"
                       />
            </DockPanel>

            <StackPanel DockPanel.Dock="Left" Background="#a7b5d1" >
                <Button Style="{DynamicResource RoundedButton}" Command="{Binding ShowMenuCommand}">
                    <Path Fill="Black" Data="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"
                  Width="24" Height="24"
                  Margin="10,5,10,5"/>
                </Button>

                <!--<Label>
                    <Path Fill="Black" Data="M12,2L4.5,20.29L5.21,21L12,18L18.79,21L19.5,20.29L12,2Z"
                  Width="24" Height="24"
                  Margin="10,5,10,5">
                        
                    </Path>
                </Label>-->

                <Rectangle
                  Fill="Black"  
                  Width="50" Height="50"
                  Margin="10,5,10,5"
                   MouseLeftButtonDown="DrawingObject_MouseLeftButtonDown">
                </Rectangle>

                <Ellipse Fill="Black"
                  Width="50" Height="50"
                  Margin="10,5,10,5"
                         MouseLeftButtonDown="DrawingObject_MouseLeftButtonDown">
                </Ellipse>

                <Line X1="0"  Y1="50" X2="50" Y2="0"
                      Stroke="Black"
                      StrokeThickness="3"
                  Width="24" Height="24"
                  Margin="10,5,10,5"
                      MouseLeftButtonDown="DrawingObject_MouseLeftButtonDown">
                </Line>

                <Path Fill="Black"
                  Data="M25,0 L50,50 L0,50Z"
                  Margin="10"
                  MouseLeftButtonDown="DrawingObject_MouseLeftButtonDown"/>

                <TextBlock FontSize="20"
                       FontWeight="DemiBold"
                       HorizontalAlignment="Center"
                           MouseLeftButtonDown="DrawingObject_MouseLeftButtonDown">
                <Run Text="T" FontSize="30"/>
                <Run Text="T" FontSize="20"/>
                </TextBlock>

            </StackPanel>

            <StackPanel DockPanel.Dock="Right" Background="#a7b5d1" >
                <Button Command="{Binding ShowRightPaneCommand}">
                  Right Pane   
                  
                </Button>
            </StackPanel>

            <!--Content control for canvas-->
            <ContentControl Content="{Binding DrawingCanvas}"
                        Grid.Column="0"
                        HorizontalAlignment="Stretch">

            </ContentControl>

        </DockPanel>

        <!--Content control for menu pane-->
        <ContentControl Content="{Binding MenuContentControl}"
                        Grid.Column="0"
                        HorizontalAlignment="Stretch">

        </ContentControl>

        <!--Content control for shared users pane-->
        <!--<ContentControl Content="{Binding SharedUsersPaneContentControl}"
                        Grid.Column="2"
                        HorizontalAlignment="Stretch">
        </ContentControl>

        -->
        <!--Content control for property window-->
        <!--
        <ContentControl Content="{Binding PropertyPaneContentControl}"
                        Grid.Column="2"
                        HorizontalAlignment="Stretch">
        </ContentControl>

        -->
        <!--Content control for project pane-->
        <!--
        <ContentControl Content="{Binding ProjectPaneContentControl}"
                        Grid.Column="2"
                        HorizontalAlignment="Stretch">
        </ContentControl>-->

        <!--Content control for right pane-->
        <ContentControl Grid.Column="2"
                        Content="{Binding RightPaneContentControl}"
                        Background="#a7b5d1"
                        HorizontalAlignment = "Stretch" 
                        Margin="0,0.5,0,0">
            
        </ContentControl>

        <!--<i:Interaction.Triggers>
                <i:EventTrigger
                        EventName="IsOpen">
                    <i:InvokeCommandAction 
                            Command="{Binding RightPaneOptionsPopUpCommand}"/>

                </i:EventTrigger>
            </i:Interaction.Triggers>-->

    </Grid>

</Window>
